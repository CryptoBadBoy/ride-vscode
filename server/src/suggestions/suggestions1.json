{
    "keywords": [
        "let",
        "true",
        "false",
        "if",
        "then",
        "else"
    ],
    "functions": {
        "fraction": {
            "name": "fraction",
            "cost": "1",
            "doc": "Multiplies value by numerator and divides by denominator",
            "params": [
                {
                    "name": "value",
                    "type": "Int",
                    "required": true,
                    "doc": "value Int multiplyer"
                },
                {
                    "name": "numerator",
                    "type": "Int",
                    "required": true,
                    "doc": "numerator Int multiplyer"
                },
                {
                    "name": "denominator",
                    "type": "Int",
                    "required": true,
                    "doc": "denominator Int divisor"
                }
            ],
            "type": "Int"
        },
        "size": {
            "name": "size",
            "cost": "2",
            "doc": "Returns size of byte vector or string",
            "params": [
                {
                    "name": "arr",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "arr LIST[ T] list"
                }
            ],
            "type": "Int"
        },
        "toBytes": {
            "name": "toBytes",
            "cost": "1",
            "doc": "Converts boolean or string or long to byte vector",
            "params": [
                {
                    "name": "s",
                    "type": "String",
                    "required": true,
                    "doc": "s String value"
                }
            ],
            "type": "ByteVector"
        },
        "take": {
            "name": "take",
            "cost": "1",
            "doc": "Takes first n bytes or characters",
            "params": [
                {
                    "name": "xs",
                    "type": "String",
                    "required": true,
                    "doc": "xs String sctring"
                },
                {
                    "name": "number",
                    "type": "Int",
                    "required": true,
                    "doc": "number Int prefix size in characters"
                }
            ],
            "type": "String"
        },
        "drop": {
            "name": "drop",
            "cost": "1",
            "doc": "Drops first n bytes or characters",
            "params": [
                {
                    "name": "xs",
                    "type": "String",
                    "required": true,
                    "doc": "xs String string"
                },
                {
                    "name": "number",
                    "type": "Int",
                    "required": true,
                    "doc": "number Int prefix size"
                }
            ],
            "type": "String"
        },
        "takeRight": {
            "name": "takeRight",
            "cost": "1",
            "doc": "Takes last n bytes or characters",
            "params": [
                {
                    "name": "@xs",
                    "type": "String",
                    "required": true,
                    "doc": "@xs String String"
                },
                {
                    "name": "@number",
                    "type": "Int",
                    "required": true,
                    "doc": "@number Int suffix size in characters"
                }
            ],
            "type": "String"
        },
        "dropRight": {
            "name": "dropRight",
            "cost": "1",
            "doc": "Drops last n bytes or characters",
            "params": [
                {
                    "name": "@xs",
                    "type": "String",
                    "required": true,
                    "doc": "@xs String string"
                },
                {
                    "name": "@number",
                    "type": "Int",
                    "required": true,
                    "doc": "@number Int suffix size in characters"
                }
            ],
            "type": "String"
        },
        "toString": {
            "name": "toString",
            "cost": "1",
            "doc": "Converts boolean or long to string",
            "params": [
                {
                    "name": "n",
                    "type": "Int",
                    "required": true,
                    "doc": "n Int value"
                }
            ],
            "type": "String"
        },
        "_isInstanceOf": {
            "name": "_isInstanceOf",
            "cost": "1",
            "doc": "Internal function to check value type",
            "params": [
                {
                    "name": "obj",
                    "type": "T",
                    "required": true,
                    "doc": "obj T value"
                },
                {
                    "name": "of",
                    "type": "String",
                    "required": true,
                    "doc": "of String type name"
                }
            ],
            "type": "Boolean"
        },
        "isDefined": {
            "name": "isDefined",
            "cost": "",
            "doc": "Checks if UNION contains value",
            "params": [
                {
                    "name": "@a",
                    "type": "OPTION[ T]",
                    "required": true,
                    "doc": "@a OPTION[ T] Option value"
                }
            ],
            "type": "Boolean"
        },
        "extract": {
            "name": "extract",
            "cost": "",
            "doc": "Extracts value from union. Throws if value is unit",
            "params": [
                {
                    "name": "@a",
                    "type": "OPTION[ T]",
                    "required": true,
                    "doc": "@a OPTION[ T] Optional value"
                }
            ],
            "type": "T"
        },
        "throw": {
            "name": "throw",
            "cost": "1",
            "doc": "Throws exception. Explicit script termination",
            "params": [
                {
                    "name": "err",
                    "type": "String",
                    "required": true,
                    "doc": "err String Error message"
                }
            ],
            "type": "Nothing"
        },
        "getElement": {
            "name": "getElement",
            "cost": "2",
            "doc": "Get list element by position",
            "params": [
                {
                    "name": "arr",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "arr LIST[ T] list"
                },
                {
                    "name": "pos",
                    "type": "Int",
                    "required": true,
                    "doc": "pos Int element position"
                }
            ],
            "type": "T"
        },
        "keccak256": {
            "name": "keccak256",
            "cost": "10",
            "doc": "Computes the keccak 256 bit hash",
            "params": [
                {
                    "name": "bytes",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "bytes ByteVector value"
                }
            ],
            "type": "ByteVector"
        },
        "blake2b256": {
            "name": "blake2b256",
            "cost": "10",
            "doc": "Computes the blake2b 256 bit hash",
            "params": [
                {
                    "name": "bytes",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "bytes ByteVector value"
                }
            ],
            "type": "ByteVector"
        },
        "sha256": {
            "name": "sha256",
            "cost": "10",
            "doc": "Computes the sha 256 bit hash",
            "params": [
                {
                    "name": "bytes",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "bytes ByteVector value"
                }
            ],
            "type": "ByteVector"
        },
        "sigVerify": {
            "name": "sigVerify",
            "cost": "100",
            "doc": "Validated signature for bytes and public key",
            "params": [
                {
                    "name": "message",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "message ByteVector value"
                },
                {
                    "name": "sig",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "sig ByteVector signature"
                },
                {
                    "name": "pub",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "pub ByteVector public key"
                }
            ],
            "type": "Boolean"
        },
        "toBase58String": {
            "name": "toBase58String",
            "cost": "10",
            "doc": "Encode Base58 string",
            "params": [
                {
                    "name": "bytes",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "bytes ByteVector value"
                }
            ],
            "type": "String"
        },
        "fromBase58String": {
            "name": "fromBase58String",
            "cost": "10",
            "doc": "Decodes base58 string",
            "params": [
                {
                    "name": "str",
                    "type": "String",
                    "required": true,
                    "doc": "str String base58 encoded string"
                }
            ],
            "type": "ByteVector"
        },
        "toBase64String": {
            "name": "toBase64String",
            "cost": "10",
            "doc": "Encodes bytearray to base64 string",
            "params": [
                {
                    "name": "bytes",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "bytes ByteVector value"
                }
            ],
            "type": "String"
        },
        "fromBase64String": {
            "name": "fromBase64String",
            "cost": "10",
            "doc": "Decodes base64 string",
            "params": [
                {
                    "name": "str",
                    "type": "String",
                    "required": true,
                    "doc": "str String base64 encoded string"
                }
            ],
            "type": "ByteVector"
        },
        "transactionById": {
            "name": "transactionById",
            "cost": "100",
            "doc": "Retrieves transaction by it's id",
            "params": [
                {
                    "name": "id",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "id ByteVector transaction Id"
                }
            ],
            "type": "Unit | Transaction"
        },
        "transactionHeightById": {
            "name": "transactionHeightById",
            "cost": "100",
            "doc": "get height when transaction was stored to blockchain",
            "params": [
                {
                    "name": "id",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "id ByteVector transaction Id"
                }
            ],
            "type": "OPTION[ Int]"
        },
        "getInteger": {
            "name": "getInteger",
            "cost": "",
            "doc": "Gets integer value by index from data tx",
            "params": [
                {
                    "name": "@data",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
                },
                {
                    "name": "@index",
                    "type": "Int",
                    "required": true,
                    "doc": "@index Int index"
                }
            ],
            "type": "OPTION[ Int]"
        },
        "getBoolean": {
            "name": "getBoolean",
            "cost": "",
            "doc": "Gets boolean value by index from data tx",
            "params": [
                {
                    "name": "@data",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
                },
                {
                    "name": "@index",
                    "type": "Int",
                    "required": true,
                    "doc": "@index Int index"
                }
            ],
            "type": "OPTION[  Boolean]"
        },
        "getBinary": {
            "name": "getBinary",
            "cost": "",
            "doc": "Gets bytevector value by index from data tx",
            "params": [
                {
                    "name": "@data",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
                },
                {
                    "name": "@index",
                    "type": "Int",
                    "required": true,
                    "doc": "@index Int index"
                }
            ],
            "type": "OPTION ByteVector"
        },
        "getString": {
            "name": "getString",
            "cost": "",
            "doc": "Gets string value by index from from data tx",
            "params": [
                {
                    "name": "@data",
                    "type": "LIST[ T]",
                    "required": true,
                    "doc": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
                },
                {
                    "name": "@index",
                    "type": "Int",
                    "required": true,
                    "doc": "@index Int index"
                }
            ],
            "type": "OPTION[ String]"
        },
        "addressFromPublicKey": {
            "name": "addressFromPublicKey",
            "cost": "",
            "doc": "Retrieves adress from publicKey bytes",
            "params": [
                {
                    "name": "@publicKey",
                    "type": "ByteVector",
                    "required": true,
                    "doc": "@publicKey ByteVector public key"
                }
            ],
            "type": "Address"
        },
        "addressFromString": {
            "name": "addressFromString",
            "cost": "",
            "doc": "Retrieves address from base58 string",
            "params": [
                {
                    "name": "@string",
                    "type": "String",
                    "required": true,
                    "doc": "@string String string address represntation"
                }
            ],
            "type": "OPTION[ Address]"
        },
        "addressFromRecipient": {
            "name": "addressFromRecipient",
            "cost": "100",
            "doc": "Retrieves adress from recipient obj",
            "params": [
                {
                    "name": "AddressOrAlias",
                    "type": "Address",
                    "required": true,
                    "doc": "AddressOrAlias Address Alias address or alias, usually tx.recipient"
                }
            ],
            "type": "Address"
        },
        "assetBalance": {
            "name": "assetBalance",
            "cost": "100",
            "doc": "Returns asset balance for address or alias",
            "params": [
                {
                    "name": "addressOrAlias",
                    "type": "Address",
                    "required": true,
                    "doc": "addressOrAlias Address Alias account"
                },
                {
                    "name": "assetId",
                    "type": "OPTION",
                    "required": true,
                    "doc": "assetId OPTION ByteVector assetId (WAVES if none)"
                }
            ],
            "type": "Int"
        },
        "wavesBalance": {
            "name": "wavesBalance",
            "cost": "",
            "doc": "Returns account balance for address or alias",
            "params": [
                {
                    "name": "@addressOrAlias",
                    "type": "Address",
                    "required": true,
                    "doc": "@addressOrAlias Address Alias account"
                }
            ],
            "type": "Int"
        }
    },
    "types": {
        "Address": {
            "name": "Address",
            "doc": "Address is type",
            "fields": [
                {
                    "name": "bytes",
                    "doc": "bytes is field of Address"
                }
            ]
        },
        "Alias": {
            "name": "Alias",
            "doc": "Alias is type",
            "fields": [
                {
                    "name": "alias",
                    "doc": "alias is field of Alias"
                }
            ]
        },
        "Transfer": {
            "name": "Transfer",
            "doc": "Transfer is type",
            "fields": [
                {
                    "name": "recipient",
                    "doc": "recipient is field of Transfer"
                },
                {
                    "name": "amount",
                    "doc": "amount is field of Transfer"
                }
            ]
        },
        "Order": {
            "name": "Order",
            "doc": "Order is type",
            "fields": [
                {
                    "name": "id",
                    "doc": "id is field of Order"
                },
                {
                    "name": "matcherPublicKey",
                    "doc": "matcherPublicKey is field of Order"
                },
                {
                    "name": "assetPair",
                    "doc": "assetPair is field of Order"
                },
                {
                    "name": "orderType",
                    "doc": "orderType is field of Order"
                },
                {
                    "name": "price",
                    "doc": "price is field of Order"
                },
                {
                    "name": "amount",
                    "doc": "amount is field of Order"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of Order"
                },
                {
                    "name": "expiration",
                    "doc": "expiration is field of Order"
                },
                {
                    "name": "matcherFee",
                    "doc": "matcherFee is field of Order"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of Order"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of Order"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of Order"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of Order"
                },
                {
                    "name": "amountAsset",
                    "doc": "amountAsset is field of Order"
                },
                {
                    "name": "priceAsset",
                    "doc": "priceAsset is field of Order"
                }
            ]
        },
        "DataEntry": {
            "name": "DataEntry",
            "doc": "DataEntry is type",
            "fields": [
                {
                    "name": "key",
                    "doc": "key is field of DataEntry"
                },
                {
                    "name": "value",
                    "doc": "value is field of DataEntry"
                }
            ]
        },
        "GenesisTransaction": {
            "name": "GenesisTransaction",
            "doc": "GenesisTransaction is type",
            "fields": [
                {
                    "name": "amount",
                    "doc": "amount is field of GenesisTransaction"
                },
                {
                    "name": "recipient",
                    "doc": "recipient is field of GenesisTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of GenesisTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of GenesisTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of GenesisTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of GenesisTransaction"
                }
            ]
        },
        "PaymentTransaction": {
            "name": "PaymentTransaction",
            "doc": "PaymentTransaction is type",
            "fields": [
                {
                    "name": "amount",
                    "doc": "amount is field of PaymentTransaction"
                },
                {
                    "name": "recipient",
                    "doc": "recipient is field of PaymentTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of PaymentTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of PaymentTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of PaymentTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of PaymentTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of PaymentTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of PaymentTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of PaymentTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of PaymentTransaction"
                }
            ]
        },
        "TransferTransaction": {
            "name": "TransferTransaction",
            "doc": "TransferTransaction is type",
            "fields": [
                {
                    "name": "feeAssetId",
                    "doc": "feeAssetId is field of TransferTransaction"
                },
                {
                    "name": "amount",
                    "doc": "amount is field of TransferTransaction"
                },
                {
                    "name": "assetId",
                    "doc": "assetId is field of TransferTransaction"
                },
                {
                    "name": "recipient",
                    "doc": "recipient is field of TransferTransaction"
                },
                {
                    "name": "attachment",
                    "doc": "attachment is field of TransferTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of TransferTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of TransferTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of TransferTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of TransferTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of TransferTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of TransferTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of TransferTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of TransferTransaction"
                }
            ]
        },
        "IssueTransaction": {
            "name": "IssueTransaction",
            "doc": "IssueTransaction is type",
            "fields": [
                {
                    "name": "quantity",
                    "doc": "quantity is field of IssueTransaction"
                },
                {
                    "name": "name",
                    "doc": "name is field of IssueTransaction"
                },
                {
                    "name": "doc",
                    "doc": "doc is field of IssueTransaction"
                },
                {
                    "name": "reissuable",
                    "doc": "reissuable is field of IssueTransaction"
                },
                {
                    "name": "decimals",
                    "doc": "decimals is field of IssueTransaction"
                },
                {
                    "name": "script",
                    "doc": "script is field of IssueTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of IssueTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of IssueTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of IssueTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of IssueTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of IssueTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of IssueTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of IssueTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of IssueTransaction"
                }
            ]
        },
        "ReissueTransaction": {
            "name": "ReissueTransaction",
            "doc": "ReissueTransaction is type",
            "fields": [
                {
                    "name": "quantity",
                    "doc": "quantity is field of ReissueTransaction"
                },
                {
                    "name": "assetId",
                    "doc": "assetId is field of ReissueTransaction"
                },
                {
                    "name": "reissuable",
                    "doc": "reissuable is field of ReissueTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of ReissueTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of ReissueTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of ReissueTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of ReissueTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of ReissueTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of ReissueTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of ReissueTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of ReissueTransaction"
                }
            ]
        },
        "BurnTransaction": {
            "name": "BurnTransaction",
            "doc": "BurnTransaction is type",
            "fields": [
                {
                    "name": "quantity",
                    "doc": "quantity is field of BurnTransaction"
                },
                {
                    "name": "assetId",
                    "doc": "assetId is field of BurnTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of BurnTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of BurnTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of BurnTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of BurnTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of BurnTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of BurnTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of BurnTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of BurnTransaction"
                }
            ]
        },
        "LeaseTransaction": {
            "name": "LeaseTransaction",
            "doc": "LeaseTransaction is type",
            "fields": [
                {
                    "name": "amount",
                    "doc": "amount is field of LeaseTransaction"
                },
                {
                    "name": "recipient",
                    "doc": "recipient is field of LeaseTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of LeaseTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of LeaseTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of LeaseTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of LeaseTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of LeaseTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of LeaseTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of LeaseTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of LeaseTransaction"
                }
            ]
        },
        "LeaseCancelTransaction": {
            "name": "LeaseCancelTransaction",
            "doc": "LeaseCancelTransaction is type",
            "fields": [
                {
                    "name": "leaseId",
                    "doc": "leaseId is field of LeaseCancelTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of LeaseCancelTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of LeaseCancelTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of LeaseCancelTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of LeaseCancelTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of LeaseCancelTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of LeaseCancelTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of LeaseCancelTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of LeaseCancelTransaction"
                }
            ]
        },
        "MassTransferTransaction": {
            "name": "MassTransferTransaction",
            "doc": "MassTransferTransaction is type",
            "fields": [
                {
                    "name": "feeAssetId",
                    "doc": "feeAssetId is field of MassTransferTransaction"
                },
                {
                    "name": "assetId",
                    "doc": "assetId is field of MassTransferTransaction"
                },
                {
                    "name": "totalAmount",
                    "doc": "totalAmount is field of MassTransferTransaction"
                },
                {
                    "name": "transfers",
                    "doc": "transfers is field of MassTransferTransaction"
                },
                {
                    "name": "transferCount",
                    "doc": "transferCount is field of MassTransferTransaction"
                },
                {
                    "name": "attachment",
                    "doc": "attachment is field of MassTransferTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of MassTransferTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of MassTransferTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of MassTransferTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of MassTransferTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of MassTransferTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of MassTransferTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of MassTransferTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of MassTransferTransaction"
                }
            ]
        },
        "CreateAliasTransaction": {
            "name": "CreateAliasTransaction",
            "doc": "CreateAliasTransaction is type",
            "fields": [
                {
                    "name": "alias",
                    "doc": "alias is field of CreateAliasTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of CreateAliasTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of CreateAliasTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of CreateAliasTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of CreateAliasTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of CreateAliasTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of CreateAliasTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of CreateAliasTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of CreateAliasTransaction"
                }
            ]
        },
        "SetScriptTransaction": {
            "name": "SetScriptTransaction",
            "doc": "SetScriptTransaction is type",
            "fields": [
                {
                    "name": "script",
                    "doc": "script is field of SetScriptTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of SetScriptTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of SetScriptTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of SetScriptTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of SetScriptTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of SetScriptTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of SetScriptTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of SetScriptTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of SetScriptTransaction"
                }
            ]
        },
        "SponsorFeeTransaction": {
            "name": "SponsorFeeTransaction",
            "doc": "SponsorFeeTransaction is type",
            "fields": [
                {
                    "name": "assetId",
                    "doc": "assetId is field of SponsorFeeTransaction"
                },
                {
                    "name": "minSponsoredAssetFee",
                    "doc": "minSponsoredAssetFee is field of SponsorFeeTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of SponsorFeeTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of SponsorFeeTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of SponsorFeeTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of SponsorFeeTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of SponsorFeeTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of SponsorFeeTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of SponsorFeeTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of SponsorFeeTransaction"
                }
            ]
        },
        "ExchangeTransaction": {
            "name": "ExchangeTransaction",
            "doc": "ExchangeTransaction is type",
            "fields": [
                {
                    "name": "buyOrder",
                    "doc": "buyOrder is field of ExchangeTransaction"
                },
                {
                    "name": "sellOrder",
                    "doc": "sellOrder is field of ExchangeTransaction"
                },
                {
                    "name": "price",
                    "doc": "price is field of ExchangeTransaction"
                },
                {
                    "name": "amount",
                    "doc": "amount is field of ExchangeTransaction"
                },
                {
                    "name": "buyMatcherFee",
                    "doc": "buyMatcherFee is field of ExchangeTransaction"
                },
                {
                    "name": "sellMatcherFee",
                    "doc": "sellMatcherFee is field of ExchangeTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of ExchangeTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of ExchangeTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of ExchangeTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of ExchangeTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of ExchangeTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of ExchangeTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of ExchangeTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of ExchangeTransaction"
                }
            ]
        },
        "DataTransaction": {
            "name": "DataTransaction",
            "doc": "DataTransaction is type",
            "fields": [
                {
                    "name": "data",
                    "doc": "data is field of DataTransaction"
                },
                {
                    "name": "id",
                    "doc": "id is field of DataTransaction"
                },
                {
                    "name": "fee",
                    "doc": "fee is field of DataTransaction"
                },
                {
                    "name": "timestamp",
                    "doc": "timestamp is field of DataTransaction"
                },
                {
                    "name": "version",
                    "doc": "version is field of DataTransaction"
                },
                {
                    "name": "sender",
                    "doc": "sender is field of DataTransaction"
                },
                {
                    "name": "senderPublicKey",
                    "doc": "senderPublicKey is field of DataTransaction"
                },
                {
                    "name": "bodyBytes",
                    "doc": "bodyBytes is field of DataTransaction"
                },
                {
                    "name": "proofs",
                    "doc": "proofs is field of DataTransaction"
                }
            ]
        }
    },
    "globalVariables": {
        "height": {
            "name": "height",
            "insertText": "height",
            "doc": "Retrieves current blockchain height"
        },
        "tx": {
            "name": "tx",
            "insertText": "tx",
            "doc": "Retrieves current transaction being processed"
        }
    },
    "snippets": {
        "ifelse": {
            "name": "ifelse",
            "insertText": "if (${1:condition}) then $2 else $3",
            "insertTextFormat": 2,
            "kind": 15
        },
        "match": {
            "name": "match",
            "insertText": "match (${1:tx}) {\n    case t:${2:type} => $0\n    case _ =>\n  }",
            "insertTextFormat": 2,
            "kind": 15
        },
        "base58": {
            "name": "base58",
            "insertText": "base58'$0'",
            "insertTextFormat": 2,
            "kind": 15
        },
        "base64": {
            "name": "base64",
            "insertText": "base64'$0'",
            "insertTextFormat": 2,
            "kind": 15
        }
    }
}