{
  "keywords": [
    "let",
    "true",
    "false",
    "if",
    "then",
    "else"
  ],

  "functions": {
    "fraction": {
      "name": "fraction",
      "cost": "1",
      "detail": "Multiplies value by numerator and divides by denominator",
      "params": [
        {
          "name": "value",
          "type": "Int",
          "required": true,
          "detail": "value Int multiplyer"
        },
        {
          "name": "numerator",
          "type": "Int",
          "required": true,
          "detail": "numerator Int multiplyer"
        },
        {
          "name": "denominator",
          "type": "Int",
          "required": true,
          "detail": "denominator Int divisor"
        }
      ],
      "type": "Int"
    },
    "size": {
      "name": "size",
      "cost": "2",
      "detail": "Returns size of byte vector or string",
      "params": [
        {
          "name": "arr",
          "type": "LIST[ T]",
          "required": true,
          "detail": "arr LIST[ T] list"
        }
      ],
      "type": "Int"
    },
    "toBytes": {
      "name": "toBytes",
      "cost": "1",
      "detail": "Converts boolean or string or long to byte vector",
      "params": [
        {
          "name": "s",
          "type": "String",
          "required": true,
          "detail": "s String value"
        }
      ],
      "type": "ByteVector"
    },
    "take": {
      "name": "take",
      "cost": "1",
      "detail": "Takes first n bytes or characters",
      "params": [
        {
          "name": "xs",
          "type": "String",
          "required": true,
          "detail": "xs String sctring"
        },
        {
          "name": "number",
          "type": "Int",
          "required": true,
          "detail": "number Int prefix size in characters"
        }
      ],
      "type": "String"
    },
    "drop": {
      "name": "drop",
      "cost": "1",
      "detail": "Drops first n bytes or characters",
      "params": [
        {
          "name": "xs",
          "type": "String",
          "required": true,
          "detail": "xs String string"
        },
        {
          "name": "number",
          "type": "Int",
          "required": true,
          "detail": "number Int prefix size"
        }
      ],
      "type": "String"
    },
    "takeRight": {
      "name": "takeRight",
      "cost": "1",
      "detail": "Takes last n bytes or characters",
      "params": [
        {
          "name": "@xs",
          "type": "String",
          "required": true,
          "detail": "@xs String String"
        },
        {
          "name": "@number",
          "type": "Int",
          "required": true,
          "detail": "@number Int suffix size in characters"
        }
      ],
      "type": "String"
    },
    "dropRight": {
      "name": "dropRight",
      "cost": "1",
      "detail": "Drops last n bytes or characters",
      "params": [
        {
          "name": "@xs",
          "type": "String",
          "required": true,
          "detail": "@xs String string"
        },
        {
          "name": "@number",
          "type": "Int",
          "required": true,
          "detail": "@number Int suffix size in characters"
        }
      ],
      "type": "String"
    },
    "toString": {
      "name": "toString",
      "cost": "1",
      "detail": "Converts boolean or long to string",
      "params": [
        {
          "name": "n",
          "type": "Int",
          "required": true,
          "detail": "n Int value"
        }
      ],
      "type": "String"
    },
    "_isInstanceOf": {
      "name": "_isInstanceOf",
      "cost": "1",
      "detail": "Internal function to check value type",
      "params": [
        {
          "name": "obj",
          "type": "T",
          "required": true,
          "detail": "obj T value"
        },
        {
          "name": "of",
          "type": "String",
          "required": true,
          "detail": "of String type name"
        }
      ],
      "type": "Boolean"
    },
    "isDefined": {
      "name": "isDefined",
      "cost": "",
      "detail": "Checks if UNION contains value",
      "params": [
        {
          "name": "@a",
          "type": "OPTION[ T]",
          "required": true,
          "detail": "@a OPTION[ T] Option value"
        }
      ],
      "type": "Boolean"
    },
    "extract": {
      "name": "extract",
      "cost": "",
      "detail": "Extracts value from union. Throws if value is unit",
      "params": [
        {
          "name": "@a",
          "type": "OPTION[ T]",
          "required": true,
          "detail": "@a OPTION[ T] Optional value"
        }
      ],
      "type": "T"
    },
    "throw": {
      "name": "throw",
      "cost": "1",
      "detail": "Throws exception. Explicit script termination",
      "params": [
        {
          "name": "err",
          "type": "String",
          "required": true,
          "detail": "err String Error message"
        }
      ],
      "type": "Nothing"
    },
    "getElement": {
      "name": "getElement",
      "cost": "2",
      "detail": "Get list element by position",
      "params": [
        {
          "name": "arr",
          "type": "LIST[ T]",
          "required": true,
          "detail": "arr LIST[ T] list"
        },
        {
          "name": "pos",
          "type": "Int",
          "required": true,
          "detail": "pos Int element position"
        }
      ],
      "type": "T"
    },
    "keccak256": {
      "name": "keccak256",
      "cost": "10",
      "detail": "Computes the keccak 256 bit hash",
      "params": [
        {
          "name": "bytes",
          "type": "ByteVector",
          "required": true,
          "detail": "bytes ByteVector value"
        }
      ],
      "type": "ByteVector"
    },
    "blake2b256": {
      "name": "blake2b256",
      "cost": "10",
      "detail": "Computes the blake2b 256 bit hash",
      "params": [
        {
          "name": "bytes",
          "type": "ByteVector",
          "required": true,
          "detail": "bytes ByteVector value"
        }
      ],
      "type": "ByteVector"
    },
    "sha256": {
      "name": "sha256",
      "cost": "10",
      "detail": "Computes the sha 256 bit hash",
      "params": [
        {
          "name": "bytes",
          "type": "ByteVector",
          "required": true,
          "detail": "bytes ByteVector value"
        }
      ],
      "type": "ByteVector"
    },
    "sigVerify": {
      "name": "sigVerify",
      "cost": "100",
      "detail": "Validated signature for bytes and public key",
      "params": [
        {
          "name": "message",
          "type": "ByteVector",
          "required": true,
          "detail": "message ByteVector value"
        },
        {
          "name": "sig",
          "type": "ByteVector",
          "required": true,
          "detail": "sig ByteVector signature"
        },
        {
          "name": "pub",
          "type": "ByteVector",
          "required": true,
          "detail": "pub ByteVector public key"
        }
      ],
      "type": "Boolean"
    },
    "toBase58String": {
      "name": "toBase58String",
      "cost": "10",
      "detail": "Encode Base58 string",
      "params": [
        {
          "name": "bytes",
          "type": "ByteVector",
          "required": true,
          "detail": "bytes ByteVector value"
        }
      ],
      "type": "String"
    },
    "fromBase58String": {
      "name": "fromBase58String",
      "cost": "10",
      "detail": "Decodes base58 string",
      "params": [
        {
          "name": "str",
          "type": "String",
          "required": true,
          "detail": "str String base58 encoded string"
        }
      ],
      "type": "ByteVector"
    },
    "toBase64String": {
      "name": "toBase64String",
      "cost": "10",
      "detail": "Encodes bytearray to base64 string",
      "params": [
        {
          "name": "bytes",
          "type": "ByteVector",
          "required": true,
          "detail": "bytes ByteVector value"
        }
      ],
      "type": "String"
    },
    "fromBase64String": {
      "name": "fromBase64String",
      "cost": "10",
      "detail": "Decodes base64 string",
      "params": [
        {
          "name": "str",
          "type": "String",
          "required": true,
          "detail": "str String base64 encoded string"
        }
      ],
      "type": "ByteVector"
    },
    "transactionById": {
      "name": "transactionById",
      "cost": "100",
      "detail": "Retrieves transaction by it's id",
      "params": [
        {
          "name": "id",
          "type": "ByteVector",
          "required": true,
          "detail": "id ByteVector transaction Id"
        }
      ],
      "type": "Unit | Transaction"
    },
    "transactionHeightById": {
      "name": "transactionHeightById",
      "cost": "100",
      "detail": "get height when transaction was stored to blockchain",
      "params": [
        {
          "name": "id",
          "type": "ByteVector",
          "required": true,
          "detail": "id ByteVector transaction Id"
        }
      ],
      "type": "OPTION[ Int]"
    },
    "getInteger": {
      "name": "getInteger",
      "cost": "",
      "detail": "Gets integer value by index from data tx",
      "params": [
        {
          "name": "@data",
          "type": "LIST[ T]",
          "required": true,
          "detail": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
        },
        {
          "name": "@index",
          "type": "Int",
          "required": true,
          "detail": "@index Int index"
        }
      ],
      "type": "OPTION[ Int]"
    },
    "getBoolean": {
      "name": "getBoolean",
      "cost": "",
      "detail": "Gets boolean value by index from data tx",
      "params": [
        {
          "name": "@data",
          "type": "LIST[ T]",
          "required": true,
          "detail": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
        },
        {
          "name": "@index",
          "type": "Int",
          "required": true,
          "detail": "@index Int index"
        }
      ],
      "type": "OPTION[  Boolean]"
    },
    "getBinary": {
      "name": "getBinary",
      "cost": "",
      "detail": "Gets bytevector value by index from data tx",
      "params": [
        {
          "name": "@data",
          "type": "LIST[ T]",
          "required": true,
          "detail": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
        },
        {
          "name": "@index",
          "type": "Int",
          "required": true,
          "detail": "@index Int index"
        }
      ],
      "type": "OPTION ByteVector"
    },
    "getString": {
      "name": "getString",
      "cost": "",
      "detail": "Gets string value by index from from data tx",
      "params": [
        {
          "name": "@data",
          "type": "LIST[ T]",
          "required": true,
          "detail": "@data LIST[ DataEntry] DataEntry vector, usally tx.data"
        },
        {
          "name": "@index",
          "type": "Int",
          "required": true,
          "detail": "@index Int index"
        }
      ],
      "type": "OPTION[ String]"
    },
    "addressFromPublicKey": {
      "name": "addressFromPublicKey",
      "cost": "",
      "detail": "Retrieves adress from publicKey bytes",
      "params": [
        {
          "name": "@publicKey",
          "type": "ByteVector",
          "required": true,
          "detail": "@publicKey ByteVector public key"
        }
      ],
      "type": "Address"
    },
    "addressFromString": {
      "name": "addressFromString",
      "cost": "",
      "detail": "Retrieves address from base58 string",
      "params": [
        {
          "name": "@string",
          "type": "String",
          "required": true,
          "detail": "@string String string address represntation"
        }
      ],
      "type": "OPTION[ Address]"
    },
    "addressFromRecipient": {
      "name": "addressFromRecipient",
      "cost": "100",
      "detail": "Retrieves adress from recipient obj",
      "params": [
        {
          "name": "AddressOrAlias",
          "type": "Address",
          "required": true,
          "detail": "AddressOrAlias Address Alias address or alias, usually tx.recipient"
        }
      ],
      "type": "Address"
    },
    "assetBalance": {
      "name": "assetBalance",
      "cost": "100",
      "detail": "Returns asset balance for address or alias",
      "params": [
        {
          "name": "addressOrAlias",
          "type": "Address",
          "required": true,
          "detail": "addressOrAlias Address Alias account"
        },
        {
          "name": "assetId",
          "type": "OPTION",
          "required": true,
          "detail": "assetId OPTION ByteVector assetId (WAVES if none)"
        }
      ],
      "type": "Int"
    },
    "wavesBalance": {
      "name": "wavesBalance",
      "cost": "",
      "detail": "Returns account balance for address or alias",
      "params": [
        {
          "name": "@addressOrAlias",
          "type": "Address",
          "required": true,
          "detail": "@addressOrAlias Address Alias account"
        }
      ],
      "type": "Int"
    }
  },
  "types": {
    "Address": {
      "name": "Address",
      "detail": "Address is type",
      "fields": [
        {
          "name": "bytes",
          "detail": "bytes is field of Address"
        }
      ]
    },
    "Alias": {
      "name": "Alias",
      "detail": "Alias is type",
      "fields": [
        {
          "name": "alias",
          "detail": "alias is field of Alias"
        }
      ]
    },
    "Transfer": {
      "name": "Transfer",
      "detail": "Transfer is type",
      "fields": [
        {
          "name": "recipient",
          "detail": "recipient is field of Transfer"
        },
        {
          "name": "amount",
          "detail": "amount is field of Transfer"
        }
      ]
    },
    "Order": {
      "name": "Order",
      "detail": "Order is type",
      "fields": [
        {
          "name": "id",
          "detail": "id is field of Order"
        },
        {
          "name": "matcherPublicKey",
          "detail": "matcherPublicKey is field of Order"
        },
        {
          "name": "assetPair",
          "detail": "assetPair is field of Order"
        },
        {
          "name": "orderType",
          "detail": "orderType is field of Order"
        },
        {
          "name": "price",
          "detail": "price is field of Order"
        },
        {
          "name": "amount",
          "detail": "amount is field of Order"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of Order"
        },
        {
          "name": "expiration",
          "detail": "expiration is field of Order"
        },
        {
          "name": "matcherFee",
          "detail": "matcherFee is field of Order"
        },
        {
          "name": "sender",
          "detail": "sender is field of Order"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of Order"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of Order"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of Order"
        },
        {
          "name": "amountAsset",
          "detail": "amountAsset is field of Order"
        },
        {
          "name": "priceAsset",
          "detail": "priceAsset is field of Order"
        }
      ]
    },
    "DataEntry": {
      "name": "DataEntry",
      "detail": "DataEntry is type",
      "fields": [
        {
          "name": "key",
          "detail": "key is field of DataEntry"
        },
        {
          "name": "value",
          "detail": "value is field of DataEntry"
        }
      ]
    },
    "GenesisTransaction": {
      "name": "GenesisTransaction",
      "detail": "GenesisTransaction is type",
      "fields": [
        {
          "name": "amount",
          "detail": "amount is field of GenesisTransaction"
        },
        {
          "name": "recipient",
          "detail": "recipient is field of GenesisTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of GenesisTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of GenesisTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of GenesisTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of GenesisTransaction"
        }
      ]
    },
    "PaymentTransaction": {
      "name": "PaymentTransaction",
      "detail": "PaymentTransaction is type",
      "fields": [
        {
          "name": "amount",
          "detail": "amount is field of PaymentTransaction"
        },
        {
          "name": "recipient",
          "detail": "recipient is field of PaymentTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of PaymentTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of PaymentTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of PaymentTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of PaymentTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of PaymentTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of PaymentTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of PaymentTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of PaymentTransaction"
        }
      ]
    },
    "TransferTransaction": {
      "name": "TransferTransaction",
      "detail": "TransferTransaction is type",
      "fields": [
        {
          "name": "feeAssetId",
          "detail": "feeAssetId is field of TransferTransaction"
        },
        {
          "name": "amount",
          "detail": "amount is field of TransferTransaction"
        },
        {
          "name": "assetId",
          "detail": "assetId is field of TransferTransaction"
        },
        {
          "name": "recipient",
          "detail": "recipient is field of TransferTransaction"
        },
        {
          "name": "attachment",
          "detail": "attachment is field of TransferTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of TransferTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of TransferTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of TransferTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of TransferTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of TransferTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of TransferTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of TransferTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of TransferTransaction"
        }
      ]
    },
    "IssueTransaction": {
      "name": "IssueTransaction",
      "detail": "IssueTransaction is type",
      "fields": [
        {
          "name": "quantity",
          "detail": "quantity is field of IssueTransaction"
        },
        {
          "name": "name",
          "detail": "name is field of IssueTransaction"
        },
        {
          "name": "detail",
          "detail": "doc is field of IssueTransaction"
        },
        {
          "name": "reissuable",
          "detail": "reissuable is field of IssueTransaction"
        },
        {
          "name": "decimals",
          "detail": "decimals is field of IssueTransaction"
        },
        {
          "name": "script",
          "detail": "script is field of IssueTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of IssueTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of IssueTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of IssueTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of IssueTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of IssueTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of IssueTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of IssueTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of IssueTransaction"
        }
      ]
    },
    "ReissueTransaction": {
      "name": "ReissueTransaction",
      "detail": "ReissueTransaction is type",
      "fields": [
        {
          "name": "quantity",
          "detail": "quantity is field of ReissueTransaction"
        },
        {
          "name": "assetId",
          "detail": "assetId is field of ReissueTransaction"
        },
        {
          "name": "reissuable",
          "detail": "reissuable is field of ReissueTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of ReissueTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of ReissueTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of ReissueTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of ReissueTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of ReissueTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of ReissueTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of ReissueTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of ReissueTransaction"
        }
      ]
    },
    "BurnTransaction": {
      "name": "BurnTransaction",
      "detail": "BurnTransaction is type",
      "fields": [
        {
          "name": "quantity",
          "detail": "quantity is field of BurnTransaction"
        },
        {
          "name": "assetId",
          "detail": "assetId is field of BurnTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of BurnTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of BurnTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of BurnTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of BurnTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of BurnTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of BurnTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of BurnTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of BurnTransaction"
        }
      ]
    },
    "LeaseTransaction": {
      "name": "LeaseTransaction",
      "detail": "LeaseTransaction is type",
      "fields": [
        {
          "name": "amount",
          "detail": "amount is field of LeaseTransaction"
        },
        {
          "name": "recipient",
          "detail": "recipient is field of LeaseTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of LeaseTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of LeaseTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of LeaseTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of LeaseTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of LeaseTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of LeaseTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of LeaseTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of LeaseTransaction"
        }
      ]
    },
    "LeaseCancelTransaction": {
      "name": "LeaseCancelTransaction",
      "detail": "LeaseCancelTransaction is type",
      "fields": [
        {
          "name": "leaseId",
          "detail": "leaseId is field of LeaseCancelTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of LeaseCancelTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of LeaseCancelTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of LeaseCancelTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of LeaseCancelTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of LeaseCancelTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of LeaseCancelTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of LeaseCancelTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of LeaseCancelTransaction"
        }
      ]
    },
    "MassTransferTransaction": {
      "name": "MassTransferTransaction",
      "detail": "MassTransferTransaction is type",
      "fields": [
        {
          "name": "feeAssetId",
          "detail": "feeAssetId is field of MassTransferTransaction"
        },
        {
          "name": "assetId",
          "detail": "assetId is field of MassTransferTransaction"
        },
        {
          "name": "totalAmount",
          "detail": "totalAmount is field of MassTransferTransaction"
        },
        {
          "name": "transfers",
          "detail": "transfers is field of MassTransferTransaction"
        },
        {
          "name": "transferCount",
          "detail": "transferCount is field of MassTransferTransaction"
        },
        {
          "name": "attachment",
          "detail": "attachment is field of MassTransferTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of MassTransferTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of MassTransferTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of MassTransferTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of MassTransferTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of MassTransferTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of MassTransferTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of MassTransferTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of MassTransferTransaction"
        }
      ]
    },
    "CreateAliasTransaction": {
      "name": "CreateAliasTransaction",
      "detail": "CreateAliasTransaction is type",
      "fields": [
        {
          "name": "alias",
          "detail": "alias is field of CreateAliasTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of CreateAliasTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of CreateAliasTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of CreateAliasTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of CreateAliasTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of CreateAliasTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of CreateAliasTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of CreateAliasTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of CreateAliasTransaction"
        }
      ]
    },
    "SetScriptTransaction": {
      "name": "SetScriptTransaction",
      "detail": "SetScriptTransaction is type",
      "fields": [
        {
          "name": "script",
          "detail": "script is field of SetScriptTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of SetScriptTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of SetScriptTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of SetScriptTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of SetScriptTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of SetScriptTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of SetScriptTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of SetScriptTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of SetScriptTransaction"
        }
      ]
    },
    "SponsorFeeTransaction": {
      "name": "SponsorFeeTransaction",
      "detail": "SponsorFeeTransaction is type",
      "fields": [
        {
          "name": "assetId",
          "detail": "assetId is field of SponsorFeeTransaction"
        },
        {
          "name": "minSponsoredAssetFee",
          "detail": "minSponsoredAssetFee is field of SponsorFeeTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of SponsorFeeTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of SponsorFeeTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of SponsorFeeTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of SponsorFeeTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of SponsorFeeTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of SponsorFeeTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of SponsorFeeTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of SponsorFeeTransaction"
        }
      ]
    },
    "ExchangeTransaction": {
      "name": "ExchangeTransaction",
      "detail": "ExchangeTransaction is type",
      "fields": [
        {
          "name": "buyOrder",
          "detail": "buyOrder is field of ExchangeTransaction"
        },
        {
          "name": "sellOrder",
          "detail": "sellOrder is field of ExchangeTransaction"
        },
        {
          "name": "price",
          "detail": "price is field of ExchangeTransaction"
        },
        {
          "name": "amount",
          "detail": "amount is field of ExchangeTransaction"
        },
        {
          "name": "buyMatcherFee",
          "detail": "buyMatcherFee is field of ExchangeTransaction"
        },
        {
          "name": "sellMatcherFee",
          "detail": "sellMatcherFee is field of ExchangeTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of ExchangeTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of ExchangeTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of ExchangeTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of ExchangeTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of ExchangeTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of ExchangeTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of ExchangeTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of ExchangeTransaction"
        }
      ]
    },
    "DataTransaction": {
      "name": "DataTransaction",
      "detail": "DataTransaction is type",
      "fields": [
        {
          "name": "data",
          "detail": "data is field of DataTransaction"
        },
        {
          "name": "id",
          "detail": "id is field of DataTransaction"
        },
        {
          "name": "fee",
          "detail": "fee is field of DataTransaction"
        },
        {
          "name": "timestamp",
          "detail": "timestamp is field of DataTransaction"
        },
        {
          "name": "version",
          "detail": "version is field of DataTransaction"
        },
        {
          "name": "sender",
          "detail": "sender is field of DataTransaction"
        },
        {
          "name": "senderPublicKey",
          "detail": "senderPublicKey is field of DataTransaction"
        },
        {
          "name": "bodyBytes",
          "detail": "bodyBytes is field of DataTransaction"
        },
        {
          "name": "proofs",
          "detail": "proofs is field of DataTransaction"
        }
      ]
    }
  },
  "globalVariables": {
    "height": {
      "name": "height",
      "insertText": "height",
      "detail": "Retrieves current blockchain height"
    },
    "tx": {
      "name": "tx",
      "insertText": "tx",
      "detail": "Retrieves current transaction being processed"
    }
  },
  "snippets": {
    "ifelse": {
      "label": "ifelse",
      "insertText": "if (${1:condition}) then $2 else $3",
      "insertTextFormat": 2
    },
    "match": {
      "label": "match",
      "insertText": "match (${1:tx}) {\n    case t:${2:type} => $0\n    case _ =>\n  }",
      "insertTextFormat": 2
    },
    "base58": {
      "label": "base58",
      "insertText": "base58'$0'",
      "insertTextFormat": 2
    },
    "base64": {
      "label": "base64",
      "insertText": "base64'$0'",
      "insertTextFormat": 2
    }
  }
}